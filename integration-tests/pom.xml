<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.demo.limits</groupId>
        <artifactId>limits-parent</artifactId>
        <version>0.0.3-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>limits-integration-tests</artifactId>
    <name>limits Integration Tests</name>
    <properties>
        <project.build.directory.portable>${project.build.directory}</project.build.directory.portable>
        <project.basedir.portable>${basedir}</project.basedir.portable>
        <maven.jacoco.plugin>0.7.4.201502262128</maven.jacoco.plugin>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.demo.limits</groupId>
            <artifactId>limits-durable-api</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>jacoco-maven-opts-unix</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>gen-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <phase>install</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <propertyName>jacoco.agent.argLine</propertyName>
                            <includes>
                                <include>com/demo/**</include>
                            </includes>
                            <excludes>
                                <exclude>com/demo/**/*Test</exclude>
                                <exclude>com/demo/**/*IT</exclude>
                            </excludes>
                            <destFile>${jacoco.it.execution.data.file}</destFile>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <execution>
                                <id>gen-mvnopts-sh</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <workingDirectory>${basedir}</workingDirectory>
                                    <executable>/bin/echo</executable>
                                    <arguments>
                                        <argument>
                                            export "MAVEN_OPTS=${jacoco.agent.argLine} -Xmx512m -XX:PermSize=512m -XX:MaxPermSize=1024m"
                                        </argument>
                                    </arguments>
                                    <outputFile>${basedir}/mvnopts.sh</outputFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>chmod-mvnopts-sh</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <workingDirectory>${basedir}</workingDirectory>
                                        <executable>/bin/chmod</executable>
                                            <arguments>
                                               <argument> 755 </argument>
                                               <argument> ${basedir}/mvnopts.sh </argument>
                                            </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jacoco-maven-opts-win</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>gen-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <phase>install</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <propertyName>jacoco.agent.argLine</propertyName>
                            <includes>
                                <include>com/demo/**</include>
                            </includes>
                            <excludes>
                                <exclude>com/demo/**/*Test</exclude>
                                <exclude>com/demo/**/*IT</exclude>
                            </excludes>
                            <destFile>${jacoco.it.execution.data.file}</destFile>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <execution>
                                <id>gen-mvnopts-bat</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <executable>cmd</executable>
                                    <arguments>
                                        <argument>/C</argument>
                                        <argument>
                                            <![CDATA[
                                            echo set MAVEN_OPTS=${jacoco.agent.argLine} -Xmx512m -XX:PermSize=512m -XX:MaxPermSize=1024m > ${basedir}/mvnopts.bat
                                        ]]>
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>it-jetty-embedded-code-coverage</id>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>setproperty</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        ant.pathconvert(targetos: "unix", property: 'project.build.directory.portable') {
                                            path(location: project.build.directory)
                                        }
                                        project.properties.setProperty(
                                                'project.build.directory.portable',
                                                ant.project.properties.'project.build.directory.portable'
                                        )

                                        ant.pathconvert(targetos: "unix", property: 'project.basedir.portable') {
                                            path(location: project.basedir)
                                        }
                                        project.properties.setProperty(
                                                'project.basedir.portable',
                                                ant.project.properties.'project.basedir.portable'
                                        )
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <!-- here the phase you need -->
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/config</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/resources</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-war-to-limits-folder</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-360</artifactId>
                                            <version>${project.version}</version>
                                            <type>war</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/limits</outputDirectory>
                                            <destFileName>limits.war</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <!-- test domain for meta -->
                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-qa-common</artifactId>
                                            <version>${project.version}</version>
                                            <classifier>tests</classifier>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/qa-setup</outputDirectory>
                                            <includes>
                                                **/E*.class,
                                                data.sql
                                            </includes>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-common</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/classes/limits-common</outputDirectory>
                                            <includes>**/*.class</includes>
                                            <excludes>**/*test.class</excludes>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-core</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/classes/limits-core</outputDirectory>
                                            <includes>**/*.class</includes>
                                            <excludes>**/*test.class</excludes>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-domain</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/classes/limits-domain</outputDirectory>
                                            <includes>**/*.class</includes>
                                            <excludes>**/*test.class</excludes>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-durable-api</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/classes/limits-durable-api</outputDirectory>
                                            <includes>**/*.class</includes>
                                            <excludes>**/*test.class</excludes>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-idm</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/classes/limits-idm</outputDirectory>
                                            <includes>**/*.class</includes>
                                            <excludes>**/*test.class</excludes>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-repository</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/classes/limits-repository</outputDirectory>
                                            <includes>**/*.class</includes>
                                            <excludes>**/*test.class</excludes>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-360</artifactId>
                                            <version>${project.version}</version>
                                            <type>war</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/classes/limits-360</outputDirectory>
                                            <includes>**/*.class</includes>
                                            <excludes>**/*test.class</excludes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${maven.jacoco.plugin}</version>
                        <executions>
                            <!--
                                Prepares the property pointing to the JaCoCo runtime agent which
                                is passed as VM argument when Maven the Failsafe plugin is executed.
                            -->
                            <execution>
                                <id>pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <propertyName>jacoco.agent.argLine</propertyName>
                                    <includes>
                                        <include>com/demo/**</include>
                                    </includes>
                                    <excludes>
                                        <exclude>com/demo/**/*Test</exclude>
                                        <exclude>com/demo/**/*IT</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                            <!--
                               Ensures that the code coverage report for integration tests after
                               integration tests have been run.
                            -->
                            <execution>
                                <id>coverage-report</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <!--<dataFile>${jacoco.it.execution.data.file}</dataFile>-->
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <!--<outputDirectory> ${project.build.directory}/jacoco-it</outputDirectory>-->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the VM argument line used when integration tests are run. -->
                                    <argLine>${jacoco.agent.argLine}</argLine>
                                </configuration>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <configuration>
                            <jvmArgs>${jacoco.agent.argLine}</jvmArgs>
                            <scanIntervalSeconds>10</scanIntervalSeconds>
                            <stopPort>8005</stopPort>
                            <stopKey>STOP</stopKey>
                            <systemProperties>
                                <systemProperty>
                                    <name>CONF_DIR</name>
                                    <value>${project.build.directory}/config</value>
                                </systemProperty>
                            </systemProperties>
                            <webApp>
                                <contextPath>/limits</contextPath>
                                <tempDirectory>${project.build.directory}/limits-deploy</tempDirectory>
                                <extraClasspath>
                                    ${project.build.directory}/qa-setup
                                </extraClasspath>
                            </webApp>
                            <war>${project.build.directory}/limits/limits.war</war>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run-exploded</goal>
                                </goals>
                                <configuration>
                                    <scanIntervalSeconds>0</scanIntervalSeconds>
                                    <daemon>true</daemon>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>it-jetty-embedded</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>setproperty</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        ant.pathconvert(targetos: "unix", property: 'project.build.directory.portable') {
                                            path(location: project.build.directory)
                                        }
                                        project.properties.setProperty(
                                                'project.build.directory.portable',
                                                ant.project.properties.'project.build.directory.portable'
                                        )

                                        ant.pathconvert(targetos: "unix", property: 'project.basedir.portable') {
                                            path(location: project.basedir)
                                        }
                                        project.properties.setProperty(
                                                'project.basedir.portable',
                                                ant.project.properties.'project.basedir.portable'
                                        )

                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <!-- here the phase you need -->
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/config</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/resources</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-war-to-limits-folder</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-360</artifactId>
                                            <version>${project.version}</version>
                                            <type>war</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/limits</outputDirectory>
                                            <destFileName>limits.war</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.demo.limits</groupId>
                                            <artifactId>limits-qa-common</artifactId>
                                            <version>${project.version}</version>
                                            <classifier>tests</classifier>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/qa-setup</outputDirectory>
                                            <includes>
                                                **/E*.class,
                                                data.sql
                                            </includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the VM argument line used when integration tests are run. -->
                                </configuration>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <configuration>
                            <scanIntervalSeconds>10</scanIntervalSeconds>
                            <stopPort>8005</stopPort>
                            <stopKey>STOP</stopKey>
                            <systemProperties>
                                <systemProperty>
                                    <name>CONF_DIR</name>
                                    <value>${project.build.directory}/config</value>
                                </systemProperty>
                            </systemProperties>
                            <webApp>
                                <contextPath>/limits</contextPath>
                                <tempDirectory>${project.build.directory}/limits-deploy</tempDirectory>
                                <extraClasspath>
                                    ${project.build.directory}/qa-setup
                                </extraClasspath>
                            </webApp>
                            <!--<useTestScope>true</useTestScope>-->
                            <war>${project.build.directory}/limits/limits.war</war>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run-exploded</goal>
                                </goals>
                                <configuration>
                                    <scanIntervalSeconds>0</scanIntervalSeconds>
                                    <daemon>true</daemon>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>it-coverage-report</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${maven.jacoco.plugin}</version>
                        <executions>
                            <!--
                               Ensures that the code coverage report for integration tests after
                               integration tests have been run.
                            -->
                            <execution>
                                <id>coverage-report</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <!--<dataFile>${jacoco.it.execution.data.file}</dataFile>-->
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <!--<outputDirectory> ${project.build.directory}/jacoco-it</outputDirectory>-->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
